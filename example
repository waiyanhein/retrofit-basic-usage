##Example of service Interface
------------------------------

public interface ApiService {

    @FormUrlEncoded
    @POST("/api.php")
    Call<JsonObject> logIn(@Field("email") String email, @Field("password") String password);
}



##Example of client
-------------------


public class ApiClient {
    public static final String API_BASE_URL = "http://192.168.1.3/bet/public/api/";

    private static OkHttpClient.Builder httpClient = new OkHttpClient.Builder().readTimeout(60, TimeUnit.SECONDS).connectTimeout(60, TimeUnit.SECONDS);

    private static Retrofit.Builder builder = new Retrofit.Builder()
            .baseUrl(API_BASE_URL)
            .addConverterFactory(GsonConverterFactory.create());

    public static ApiService createService(Class<ApiService> serviceClass)
    {
        Retrofit retrofit = builder.client(httpClient.build()).build();
        return retrofit.create(serviceClass);
    }
}


##Example of making request
---------------------------

        ApiService service = ApiClient.createService(ApiService.class);
        Call<JsonObject> call = service.logIn(tfEmail.getText().toString(), tfPassword.getText().toString());
        call.enqueue(new Callback<JsonObject>() {
            @Override
            public void onResponse(Call<JsonObject> call, Response<JsonObject> response) {
                if(response.isSuccessful())
                {
                    JsonObject body = response.body();
                    Toast.makeText(getApplicationContext(),body.get("status").getAsString(),Toast.LENGTH_SHORT).show();
                }
                else{
                    Toast.makeText(getApplicationContext(),"Unable to connect to server",Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onFailure(Call<JsonObject> call, Throwable t) {
                Toast.makeText(getApplicationContext(),t.getMessage(),Toast.LENGTH_SHORT).show();
            }
        });
